apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysqldb
        image: mysql
        resources:
          requests:
            cpu: 100m
            memory: 400Mi
        ports:
        - containerPort: 3306 # The default port for MYSQL
        # some other environment vars have to be set for mysql to not crashloopback
        env:
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_ROOT_PASSWORD
            value: "123"
        # This is NOT a secure way to do a db password, but just for this example we will
        # We're running these commands here as opposed to in the Dockerfile
        # for the default mysql container, that way we can make changes
        # by simply restarting the pod and not building a new image
        # THE FOLLOWING COMMANDS ARE NOT NECESSARY IF YOU SPECIFIY THE DB ROOT PW ENV
        # command: ["/bin/sh", "-c"]
        # args:
        #   - echo Testing this mysql container;
        #     while true;
        #     do
        #     echo "$(date)\n" >> /tmp/example.log;
        #     sleep 1;
        #     done
        # volumeMounts: ... for persistence of our data living on some volume on host

      # restartPolicy: Always
